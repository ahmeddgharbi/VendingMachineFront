{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ghaahm\\\\frontend\\\\src\\\\Components\\\\Others\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect } from \"react\";\nimport { Form } from \"react-bootstrap\";\nimport { useState } from \"react\";\nimport { UserContext } from \"../../App\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  _s();\n\n  // The user state\n  const [user, setUser] = useContext(UserContext);\n  const [session, setSession] = useState({});\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    if (isLoggedIn) {\n      window.location.href = \"/home\";\n    }\n  }, [isLoggedIn]);\n  useEffect(() => {\n    localStorage.setItem(\"session\", JSON.stringify(session));\n    console.log(session);\n  }, [session]); //Login function-----------------------------------------------------\n\n  const loginUpdate = async e => {\n    e.preventDefault();\n    const email = document.getElementById('email').value;\n    const password = document.getElementById('password').value;\n    const requestOptions = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email,\n        password\n      })\n    };\n    const response = await fetch(\"http://localhost:3005/api/users/login\", requestOptions);\n    const data = await response.json();\n\n    if (data.message === \"Invalid Credentials\") {\n      alert(\"Invalid Credentials\");\n    } else {\n      console.log(data);\n      setUser(data.user);\n      setSession({\n        user: data.user,\n        key: data.session_key\n      });\n      setIsLoggedIn(true);\n      document.getElementById(\"loginForm\").style.display = \"none\";\n      document.getElementById(\"loginImg\").style.display = \"none\";\n    }\n  }; //Check Login-----------------------------------------------------\n\n\n  const checkLogin = async (email, password) => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"loginForm\",\n    className: \"mx-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Login Form \", user && user.username]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Email address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          id: \"email\",\n          type: \"text\",\n          placeholder: \"name@example.com\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          id: \"password\",\n          placeholder: \"password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3 \",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => loginUpdate(e),\n          className: \"btn-success px-3 py-1 rounded\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LoginForm, \"329zlGbLuodMSvgsHj/scqCXWUc=\");\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"sources":["C:/Users/ghaahm/frontend/src/Components/Others/LoginForm.js"],"names":["React","useContext","useEffect","Form","useState","UserContext","LoginForm","user","setUser","session","setSession","isLoggedIn","setIsLoggedIn","window","location","href","localStorage","setItem","JSON","stringify","console","log","loginUpdate","e","preventDefault","email","document","getElementById","value","password","requestOptions","method","headers","body","response","fetch","data","json","message","alert","key","session_key","style","display","checkLogin","username"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\n\r\nconst LoginForm = () => {\r\n  // The user state\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const [session, setSession] = useState({});\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      window.location.href = \"/home\";\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"session\", JSON.stringify(session));\r\n    console.log(session);\r\n  }, [session]);\r\n\r\n  //Login function-----------------------------------------------------\r\n  const loginUpdate =async (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    };\r\n    const response = await fetch(\r\n      \"http://localhost:3005/api/users/login\",\r\n      requestOptions\r\n    );\r\n    const data = await response.json();\r\n    if (data.message === \"Invalid Credentials\") {\r\n      alert(\"Invalid Credentials\");\r\n    } else {\r\n      console.log(data);\r\n      setUser(data.user);\r\n      \r\n      setSession({ user: data.user, key: data.session_key });\r\n      setIsLoggedIn(true);\r\n      \r\n      document.getElementById(\"loginForm\").style.display = \"none\";\r\n      document.getElementById(\"loginImg\").style.display = \"none\";\r\n\r\n    }\r\n  };\r\n  //Check Login-----------------------------------------------------\r\n\r\n  const checkLogin = async (email, password) => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div id=\"loginForm\" className=\"mx-5\">\r\n      <h3>Login Form {user && user.username}</h3>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control id=\"email\" type=\"text\" placeholder=\"name@example.com\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"text\" id=\"password\" placeholder=\"password\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3 \">\r\n          <button\r\n            onClick={(e) => loginUpdate(e)}\r\n            className=\"btn-success px-3 py-1 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"]},"metadata":{},"sourceType":"module"}