[{"C:\\Users\\ghaahm\\frontend\\src\\index.js":"1","C:\\Users\\ghaahm\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\ghaahm\\frontend\\src\\App.js":"3","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Home.js":"4","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Dashboard.js":"5","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Login.js":"6","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Registration.js":"7","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Cart.js":"8","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\UpdateProduct.js":"9","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\NavBar.js":"10","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\LoginForm.js":"11","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\UserStatus.js":"12","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\SessionViewer.js":"13","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\RegistrationForm.js":"14"},{"size":548,"mtime":1648602448000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499176900000,"results":"17","hashOfConfig":"16"},{"size":1623,"mtime":1648840806000,"results":"18","hashOfConfig":"16"},{"size":4257,"mtime":1648840934000,"results":"19","hashOfConfig":"16"},{"size":11933,"mtime":1648857200000,"results":"20","hashOfConfig":"16"},{"size":970,"mtime":1648781932000,"results":"21","hashOfConfig":"16"},{"size":311,"mtime":1648681496000,"results":"22","hashOfConfig":"16"},{"size":4453,"mtime":1648810954000,"results":"23","hashOfConfig":"16"},{"size":3220,"mtime":1648857618000,"results":"24","hashOfConfig":"16"},{"size":1251,"mtime":1648840808000,"results":"25","hashOfConfig":"16"},{"size":2561,"mtime":1648847976000,"results":"26","hashOfConfig":"16"},{"size":1672,"mtime":1648815192000,"results":"27","hashOfConfig":"16"},{"size":1920,"mtime":1648848246000,"results":"28","hashOfConfig":"16"},{"size":2635,"mtime":1648781932000,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pc2pj9",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"39"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"39"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"39"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"39"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"39"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"39"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ghaahm\\frontend\\src\\index.js",[],[],"C:\\Users\\ghaahm\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\ghaahm\\frontend\\src\\App.js",[],[],["79","80"],"C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Home.js",["81","82","83","84"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ProductContext, UserContext } from \"../../App\";\r\nimport NavBar from \"../Others/NavBar\";\r\nimport UserStatus from \"../Others/UserStatus\";\r\nimport \"./CommonStyle.css\";\r\n\r\nconst Home = () => {\r\n  const [products, setProducts] = useContext(ProductContext);\r\n  const [user, setUser] = useContext(UserContext);\r\n  \r\n  const [session, setSession] = useState({});\r\n\r\n  useEffect(() => {\r\n    const session = JSON.parse(localStorage.getItem(\"session\"));\r\n    console.log(session);\r\n    if (session?.key) {\r\n      setSession(session);\r\n      fetch(\r\n        `http://localhost:3005/api/users/verify-session/${session.key}/${session.user.email}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          if (!data.forceLogout) {\r\n            setSession({ ...session, user: data.user });\r\n          }\r\n          else {\r\n            setSession({});\r\n            console.log('session destroyed')\r\n          }\r\n        });\r\n    }\r\n    fetch(\"http://localhost:3005/api/products/all\")\r\n      .then((res) => res.json())\r\n      .then((data) => setProducts(data));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (session.key) {\r\n      setUser(session.user);\r\n    }\r\n  }, [session]);\r\n\r\n  const handleOnToCart = (e, pid) => {\r\n    e.preventDefault();\r\n    if (!session?.key) {\r\n      alert(\"Please Login First\");\r\n    }\r\n    const thePd = products.find((pd) => pd._id === pid);\r\n    let totalPrice = 0;\r\n    user.cart.map((it) => {\r\n      totalPrice = totalPrice + it.cost;\r\n    });\r\n    console.log(totalPrice + thePd.cost, \"asd\", user.deposit);\r\n    if (user.username) {\r\n      if (user.role === \"seller\") {\r\n        alert(\"Please Login With an Buyer ID\");\r\n      } else if (user.role === \"buyer\") {\r\n        if (thePd.amountAvailable <= 0) {\r\n          alert(\"Out of Stock\");\r\n        } else if (totalPrice + thePd.cost > user.deposit) {\r\n          alert(\"Insufficient Balance\");\r\n        } else {\r\n          console.log(\"on click\");\r\n          e.preventDefault();\r\n          const requestOptions = {\r\n            method: \"PATCH\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({\r\n              pid: pid,\r\n            }),\r\n          };\r\n          fetch(\r\n            `http://localhost:3005/api/users/addToCart/${user._id}`,\r\n            requestOptions\r\n          )\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              setUser(data);\r\n              console.log(\"Element added to cart\");\r\n            });\r\n        }\r\n      }\r\n    } else {\r\n      alert(\"Please Login First\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <NavBar></NavBar>\r\n      {user?.username && <UserStatus />}\r\n\r\n      <div className=\"container\">\r\n        {products?<div className=\"row d-flex justify-content-center\">\r\n          {products.map((pd) => (\r\n            <div\r\n              key={Math.random() + Date.now()}\r\n              className=\"col-md-6 col-lg-3 py-3 product \"\r\n            >\r\n              {}\r\n              <h3 className=\"d-flex justify-content-center align-items-center\">\r\n                {pd.productName}\r\n              </h3>\r\n              <h4 className=\"d-flex justify-content-center align-items-center\">\r\n                Cost: {pd.cost}\r\n              </h4>\r\n              <h4 className=\"d-flex justify-content-center align-items-center\">\r\n                Available:{pd.amountAvailable}\r\n              </h4>\r\n              {/* <h4  className=\"d-flex justify-content-center align-items-center\">SID: {pd.sellerId}</h4> */}\r\n              <h6 className=\"d-flex justify-content-center align-items-center\">\r\n                <button\r\n                  onClick={(e) => handleOnToCart(e, pd._id)}\r\n                  value={pd.cost}\r\n                  className=\"btn-success rounded px-2 py-1\"\r\n                >\r\n                  Add To Cart\r\n                </button>\r\n              </h6>\r\n            </div>\r\n          ))}\r\n        </div> : <div className=\"d-flex justify-content-center\">\r\n          <img src=\"https://cdn.dribbble.com/users/1186261/screenshots/3718681/_______.gif\"/>\r\n        </div>}\r\n          \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Dashboard.js",["85","86"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nimport { ProductContext } from \"../../App\";\r\nimport NavBar from \"../Others/NavBar\";\r\nimport UserStatus from \"../Others/UserStatus\";\r\nimport UpdateProduct from \"./UpdateProduct\";\r\nimport { Form, Table } from \"react-bootstrap\";\r\nimport \"./CommonStyle.css\";\r\nimport SessionViewer from \"../Others/SessionViewer\";\r\n\r\nconst Dashboard = () => {\r\n  const [formName, setFormName] = useState(\"addProduct\");\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [products, setProducts] = useContext(ProductContext);\r\n  const [toUpdate, setToUpdate] = useState(\"\");\r\n\r\n  const [updateProduct, setUpdateProduct] = useState({});\r\n\r\n  const [session, setSession] = useState({});\r\n\r\n  const [showProductTable, setShowProductTable] = useState(false);\r\n  const [showUpdateProduct, setShowUpdateProduct] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const session = JSON.parse(localStorage.getItem(\"session\"));\r\n    console.log(session);\r\n    if (session?.key) {\r\n      setSession(session);\r\n      fetch(\r\n        `http://localhost:3005/api/users/verify-session/${session.key}/${session.user.email}`\r\n      )\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          console.log(data);\r\n          if (!data.forceLogout) {\r\n            setSession({ ...session, user: data.user });\r\n          } else {\r\n            setSession({});\r\n            console.log(\"session destroyed\");\r\n          }\r\n        });\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (session.key) {\r\n      setUser(session.user);\r\n    }\r\n    console.log(session, \"sdflksdfd\");\r\n    localStorage.setItem(\"session\", JSON.stringify(session));\r\n  }, [session]);\r\n\r\n  const handleOnDeposit = (e) => {\r\n    e.preventDefault();\r\n    const toDeposit = document.getElementById(\"deposit\").value;\r\n    console.log(toDeposit);\r\n    const requestOptions = {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        deposit: parseInt(user.deposit) + parseInt(toDeposit),\r\n      }),\r\n    };\r\n    console.log(user._id);\r\n    fetch(\r\n      `http://localhost:3005/api/users/updateDeposit/${user._id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setUser(data);\r\n      });\r\n  };\r\n  const handleResetDeposit = (e) => {\r\n    e.preventDefault();\r\n    const toDeposit = document.getElementById(\"deposit\").value;\r\n    console.log(toDeposit);\r\n    const requestOptions = {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        deposit: 0,\r\n      }),\r\n    };\r\n    console.log(user._id);\r\n    fetch(\r\n      `http://localhost:3005/api/users/updateDeposit/${user._id}`,\r\n      requestOptions\r\n    )\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        setUser(data);\r\n      });\r\n    alert(\"Deposit Reset Successfully\");\r\n  };\r\n\r\n  const handleOnAddProduct = async (e) => {\r\n    e.preventDefault();\r\n    const name = document.getElementById(\"pname\").value;\r\n    const cost = document.getElementById(\"pcost\").value;\r\n    const amount = document.getElementById(\"pamount\").value;\r\n    const newProduct = {\r\n      productName: name,\r\n      cost: cost,\r\n      amountAvailable: amount,\r\n      sellerId: user._id,\r\n      sellerName: user.username,\r\n    };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newProduct),\r\n    };\r\n    const response = await fetch(\r\n      \"http://localhost:3005/api/products/add\",\r\n      requestOptions\r\n    );\r\n    const data = await response.json();\r\n    if (data) alert(\"Product Added\");\r\n    const prd = [...products];\r\n    prd.push(newProduct);\r\n    setProducts(prd);\r\n  };\r\n  const handleOnUpdateClick = (e, p) => {\r\n    e.preventDefault();\r\n    const newPrd = {...p};\r\n    // let obj = products.find(o => o._id === e.target.value );\r\n    // console.log(obj);\r\n    \r\n    console.log('Product Param', newPrd);\r\n    console.log('updateProduct', updateProduct);\r\n    const productId = e.target.value;\r\n    setToUpdate(productId);\r\n    setShowProductTable(false);\r\n    setShowUpdateProduct(true);\r\n  };\r\n  const handleOnDeleteClick = (e) => {\r\n    e.preventDefault();\r\n    const productId = e.target.value;\r\n    fetch(`http://localhost:3005/api/products/delete/${productId}`, {\r\n      method: \"DELETE\",\r\n    }).then(() => alert(\"Deleted Successfully\"));\r\n    //document.getElementById(`x${productId}`).style.display = 'none';\r\n    const prd = [...products];\r\n    prd.splice(\r\n      prd.findIndex((a) => a._id === productId),\r\n      1\r\n    );\r\n    setProducts(prd);\r\n  };\r\n  const handleDisplay = (e) => {\r\n    e.preventDefault();\r\n    fetch(\"http://localhost:3005/api/products/all\")\r\n      .then((res) => res.json())\r\n      .then((data) => setProducts(data));\r\n    setFormName(\"manageProducts\");\r\n    setShowProductTable(true);\r\n    setShowUpdateProduct(false);\r\n  };\r\n\r\n  function handleUpdateOnSubmit() {\r\n    setShowProductTable(true);\r\n    setShowUpdateProduct(false);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NavBar></NavBar>\r\n      <UserStatus />\r\n      <div className=\"container\">\r\n        <SessionViewer />\r\n      </div>\r\n      {user.role === \"seller\" && (\r\n        <div className=\"row\">\r\n          <h3 className=\"mx-5\">Seller Dashboard</h3>\r\n          <div className=\"col-md-3\">\r\n            <ul className=\"\">\r\n              <li className=\"liSt\">\r\n                <button\r\n                  onClick={() => {setFormName(\"addProduct\"); setShowProductTable(false); setShowUpdateProduct(false)}}\r\n                  className=\"dList\"\r\n                >\r\n                  Add Product\r\n                </button>\r\n              </li>\r\n\r\n              <li className=\"liSt\">\r\n                <button onClick={(e) => handleDisplay(e)} className=\"dList\">\r\n                  Manage Products\r\n                </button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            {formName === \"addProduct\" && (\r\n              <div>\r\n                <h3>Add Product</h3>\r\n                <Form id=\"registrationForm\">\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Product Name</Form.Label>\r\n                    <Form.Control\r\n                      id=\"pname\"\r\n                      type=\"text\"\r\n                      placeholder=\"Pencil Box\"\r\n                    />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Product Cost</Form.Label>\r\n                    <Form.Control type=\"text\" id=\"pcost\" placeholder=\"10\" />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3\">\r\n                    <Form.Label>Available Amount</Form.Label>\r\n                    <Form.Control type=\"text\" id=\"pamount\" placeholder=\"10\" />\r\n                  </Form.Group>\r\n                  <Form.Group className=\"mb-3 \">\r\n                    <button\r\n                      onClick={(e) => handleOnAddProduct(e)}\r\n                      className=\"btn-success px-3 py-1 rounded\"\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                  </Form.Group>\r\n                </Form>\r\n              </div>\r\n            )}\r\n            {showProductTable && (\r\n              <div>\r\n                <Table id=\"productTable\" striped bordered hover size=\"sm\">\r\n                  <thead>\r\n                    <tr>\r\n                      <th>Product Name</th>\r\n                      <th>Cost</th>\r\n                      <th>Available</th>\r\n                      <th>Seller Id</th>\r\n                      <th>Username</th>\r\n                      <th>Update/Delete</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {products.map((pd) => (\r\n                      <tr id={\"x\" + pd._id} key={Math.random() + Date.now()}>\r\n                        <td>{pd.productName}</td>\r\n                        <td>{pd.cost}</td>\r\n                        <td>{pd.amountAvailable}</td>\r\n                        <td>{pd.sellerId}</td>\r\n                        <td>{pd.sellerName}</td>\r\n                        {user._id === pd.sellerId && (\r\n                          <td>\r\n                            <button\r\n                              onClick={(e) => handleOnUpdateClick(e, pd)}\r\n                              value={pd._id}\r\n                              \r\n                              className=\"mx-2 btn-warning rounded\"\r\n                            >\r\n                              Update\r\n                            </button>\r\n                            <button\r\n                              onClick={(e) => handleOnDeleteClick(e)}\r\n                              value={pd._id}\r\n                              className=\"mx-2 btn-danger rounded\"\r\n                            >\r\n                              Delete\r\n                            </button>\r\n                          </td>\r\n                        )}\r\n                      </tr>\r\n                    ))}\r\n                  </tbody>\r\n                </Table>\r\n              </div>\r\n            )}{ showUpdateProduct && (<div id=\"updateProductForm\">\r\n            <h1>Update Product</h1>\r\n              <UpdateProduct productId={toUpdate} onSubmit={handleUpdateOnSubmit}></UpdateProduct>\r\n          </div>)}\r\n          </div>\r\n        </div>\r\n      )}\r\n      {user.role === \"buyer\" && (\r\n        <div className=\"row\">\r\n          <h3 className=\"mx-5\">Buyer Dashboard</h3>\r\n          <div className=\"col-md-3\">\r\n            <ul className=\"\">\r\n              <li className=\"liSt\">\r\n                <button className=\"dList\">Deposit Money</button>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"col-md-9\">\r\n            <div>\r\n              <h3> Deposit Money</h3>\r\n              <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                  <img\r\n                    id=\"centsImage\"\r\n                    className=\"\"\r\n                    src=\"https://gallery.yopriceville.com/var/albums/Free-Clipart-Pictures/Money.PNG/Transparent_Cents_PNG_Clipart.png?m=1434276666\"\r\n                    alt=\"\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                  <Form id=\"depositeForm\">\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label>Select Amount to Deposit</Form.Label>\r\n                      <Form.Select\r\n                        id=\"deposit\"\r\n                        aria-label=\"Default select example\"\r\n                      >\r\n                        <option value=\"5\">5</option>\r\n                        <option value=\"10\">10</option>\r\n                        <option value=\"25\">25</option>\r\n                        <option value=\"50\">50</option>\r\n                        <option value=\"100\">100</option>\r\n                      </Form.Select>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <button\r\n                        onClick={(e) => handleOnDeposit(e)}\r\n                        className=\"btn-success px-2 rounded\"\r\n                      >\r\n                        Deposit this amount\r\n                      </button>\r\n                      <button\r\n                        onClick={(e) => handleResetDeposit(e)}\r\n                        className=\"mx-5 btn-danger px-2 rounded\"\r\n                      >\r\n                        Reset Deposit\r\n                      </button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Login.js",["87","88","89"],[],"C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Registration.js",[],[],"C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\Cart.js",["90","91"],[],"C:\\Users\\ghaahm\\frontend\\src\\Components\\pages\\UpdateProduct.js",["92","93"],[],"import React, { useContext, useEffect, useState } from \"react\";\r\nimport { ProductContext, UserContext } from \"../../App\";\r\nimport { Form } from \"react-bootstrap\";\r\nconst UpdateProduct = (props) => {\r\n  const [theProduct, setTheProduct] = useState({});\r\n  const [user, setUser] = useContext(UserContext);\r\n  const [products, setProducts] = useContext(ProductContext);\r\n  console.log(props)\r\n  let prod = products.find(o => o._id === props.productId );\r\n  console.log(prod)\r\n\r\n  const proId = prod._id;\r\n  console.log(proId);\r\n\r\n  const handleOnUpdateProduct = (e) => {\r\n    e.preventDefault();\r\n    \r\n    const name = prod.productName;\r\n    const cost = prod.cost;\r\n    const amount = prod.amountAvailable;\r\n    const newProduct = {\r\n      productName: name,\r\n      cost: cost,\r\n      amountAvailable: amount,\r\n      sellerId: user._id,\r\n    };\r\n    //update in local\r\n    const prd = [...products];\r\n    const objIndex = prd.findIndex((obj) => obj._id === proId);\r\n    console.log(objIndex);\r\n    prd[objIndex].productName = name;\r\n    prd[objIndex].cost = cost;\r\n    prd[objIndex].amountAvailable = amount;\r\n\r\n    console.log(prd);\r\n    setProducts(prd);\r\n    //update in server\r\n    const requestOptions = {\r\n      method: \"PATCH\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(newProduct),\r\n    };\r\n    fetch(`http://localhost:3005/api/products/update/${proId}`, requestOptions)\r\n      .then((response) => response.json())\r\n      .then((data) => console.log(data));\r\n\r\n    alert(\"Product Updated Successfully\");\r\n    prod = theProduct;\r\n    console.log(prod);\r\n    props.onSubmit();\r\n  };\r\n\r\n  function handleInputChange(e) {\r\n    const { name, value } = e.target;\r\n    setTheProduct({ ...theProduct, [name]: value });\r\n    prod[name] = value;\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      { !(prod?.productName) ? (\r\n        <div>The prduct list is loading...</div>) : (<>\r\n      <h3>Update Product</h3>\r\n      <Form id=\"registrationForm\">\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Product Name</Form.Label>\r\n          <Form.Control\r\n            id=\"pname\"\r\n            name=\"productName\"\r\n            type=\"text\"\r\n            required\r\n            value={prod.productName}\r\n            placeholder=\"Pencil Box\"\r\n            onChange={handleInputChange}\r\n          />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Product Cost</Form.Label>\r\n          <Form.Control type=\"text\" id=\"pcost\" placeholder=\"10\" required\r\n          name=\"cost\" onChange={handleInputChange} value={prod.cost} />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Available Amount</Form.Label>\r\n          <Form.Control type=\"text\" id=\"pamount\" placeholder=\"10\" required\r\n          value={prod.amountAvailable} name=\"amountAvailable\" onChange={handleInputChange} />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3 \">\r\n          <button\r\n            onClick={(e) => handleOnUpdateProduct(e)}\r\n            className=\"btn-success px-3 py-1 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Form.Group>\r\n      </Form>\r\n      </>)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateProduct;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\NavBar.js",["94"],[],"import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\"; //React Router\r\nimport Button from \"react-bootstrap/Button\"; //Bootstrap\r\nimport { UserContext } from \"../../App\";\r\nconst NavBar = () => {\r\n  const [user, setUser] = useContext(UserContext);\r\n  return (\r\n    <div className=\"d-flex justify-content-center pt-5\">\r\n      \r\n      <nav className=\"\">\r\n        <Link to=\"/\">\r\n          <Button className=\" m-2\">To Home</Button>\r\n        </Link>\r\n        {(user?.username) && (\r\n          <>\r\n            <Link to=\"/dashboard\">\r\n              <Button className=\"bt m-2\">To Dashboard</Button>\r\n            </Link>\r\n          </>\r\n        )}\r\n                {(user?.username) && (\r\n          <>\r\n            <Link to=\"/cart\">\r\n              <Button className=\"bt m-2\">Cart {user.cart?.length}</Button>\r\n            </Link>\r\n          </>\r\n        )}\r\n        {\r\n          (!user?.username) && (\r\n            <Link to=\"/login\">\r\n          <Button className=\"bt-success m-2\">Login</Button>\r\n        </Link>\r\n          )\r\n        }\r\n        <Link id=\"registrationNav\" to=\"/register\">\r\n          <Button className=\"bt-success m-2\">Register</Button>\r\n        </Link>\r\n      </nav>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\LoginForm.js",["95"],[],"import React, { useContext, useEffect } from \"react\";\r\n\r\nimport { Form } from \"react-bootstrap\";\r\n\r\nimport { useState } from \"react\";\r\n\r\nimport { UserContext } from \"../../App\";\r\n\r\n\r\nconst LoginForm = () => {\r\n  // The user state\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const [session, setSession] = useState({});\r\n\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (isLoggedIn) {\r\n      window.location.href = \"/\";\r\n    }\r\n  }, [isLoggedIn]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"session\", JSON.stringify(session));\r\n    console.log(session);\r\n  }, [session]);\r\n\r\n  //Login function-----------------------------------------------------\r\n  const loginUpdate =async (e) => {\r\n    e.preventDefault();\r\n    const email = document.getElementById('email').value;\r\n    const password = document.getElementById('password').value;\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email, password }),\r\n    };\r\n    const response = await fetch(\r\n      \"http://localhost:3005/api/users/login\",\r\n      requestOptions\r\n    );\r\n    const data = await response.json();\r\n    if (data.message === \"Invalid Credentials\") {\r\n      alert(\"Invalid Credentials\");\r\n    } else {\r\n      console.log(data);\r\n      setUser(data.user);\r\n      \r\n      setSession({ user: data.user, key: data.session_key });\r\n      setIsLoggedIn(true);\r\n      \r\n      document.getElementById(\"loginForm\").style.display = \"none\";\r\n      document.getElementById(\"loginImg\").style.display = \"none\";\r\n\r\n    }\r\n  };\r\n  //Check Login-----------------------------------------------------\r\n\r\n  const checkLogin = async (email, password) => {\r\n    \r\n  };\r\n\r\n  return (\r\n    <div id=\"loginForm\" className=\"mx-5\">\r\n      <h3>Login Form {user && user.username}</h3>\r\n      <Form>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Email address</Form.Label>\r\n          <Form.Control id=\"email\" type=\"text\" placeholder=\"name@example.com\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3\">\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control type=\"text\" id=\"password\" placeholder=\"password\" />\r\n        </Form.Group>\r\n        <Form.Group className=\"mb-3 \">\r\n          <button\r\n            onClick={(e) => loginUpdate(e)}\r\n            className=\"btn-success px-3 py-1 rounded\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </Form.Group>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\UserStatus.js",["96"],[],"C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\SessionViewer.js",["97","98"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useContext } from \"react\";\r\nimport { UserContext } from \"../../App\";\r\nconst SessionViewer = () => {\r\n  const [user, setUser] = useContext(UserContext);\r\n\r\n  const [session, setSession] = useState({});\r\n\r\n  useEffect(() => {\r\n    const session = JSON.parse(localStorage.getItem(\"session\"));\r\n    console.log(session);\r\n    if (session?.key) {\r\n      setSession(session);\r\n    }\r\n  }, []);\r\n\r\n  function handleDestroyAllSession() {\r\n    console.log(\"logout\");\r\n    const session = JSON.parse(localStorage.getItem(\"session\"));\r\n    console.log(session);\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ email: session.user.email, session: session.key }),\r\n    };\r\n    fetch(`http://localhost:3005/api/users/logout/all`, requestOptions)\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        if (data.message === \"Logged out of all sessions\") {\r\n          console.log(\"session destroyed 222\");\r\n          setSession({...session, user: data.user});          \r\n        }\r\n      });\r\n      \r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {session.user?.sessions.length > 1 && (\r\n        <>\r\n          <div\r\n            id=\"loginText\"\r\n            className=\"d-flex flex-column justify-content-center my-3  py-2 rounded bg-warning mx-5\"\r\n          >\r\n            <h3 className=\"d-flex justify-content-center\">There is already an active session using your account. </h3>\r\n            <div>\r\n            <button\r\n                className=\"btn-danger rounded mt-2 d-block mx-auto\"\r\n                onClick={handleDestroyAllSession}\r\n              >\r\n                Terminate All Other Sessions\r\n              </button>\r\n            </div>\r\n          </div>\r\n          \r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default SessionViewer;\r\n","C:\\Users\\ghaahm\\frontend\\src\\Components\\Others\\RegistrationForm.js",["99"],[],{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":36,"column":6,"nodeType":"106","endLine":36,"endColumn":8,"suggestions":"107"},{"ruleId":"104","severity":1,"message":"108","line":42,"column":6,"nodeType":"106","endLine":42,"endColumn":15,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":51,"column":24,"nodeType":"112","messageId":"113","endLine":51,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":124,"column":11,"nodeType":"116","endLine":124,"endColumn":94},{"ruleId":"117","severity":1,"message":"118","line":17,"column":25,"nodeType":"119","messageId":"120","endLine":17,"endColumn":41},{"ruleId":"104","severity":1,"message":"108","line":51,"column":6,"nodeType":"106","endLine":51,"endColumn":15,"suggestions":"121"},{"ruleId":"117","severity":1,"message":"122","line":7,"column":16,"nodeType":"119","messageId":"120","endLine":7,"endColumn":23},{"ruleId":"117","severity":1,"message":"123","line":8,"column":10,"nodeType":"119","messageId":"120","endLine":8,"endColumn":15},{"ruleId":"117","severity":1,"message":"124","line":8,"column":17,"nodeType":"119","messageId":"120","endLine":8,"endColumn":25},{"ruleId":"104","severity":1,"message":"108","line":39,"column":6,"nodeType":"106","endLine":39,"endColumn":15,"suggestions":"125"},{"ruleId":"110","severity":1,"message":"111","line":44,"column":24,"nodeType":"112","messageId":"113","endLine":44,"endColumn":26},{"ruleId":"117","severity":1,"message":"126","line":1,"column":29,"nodeType":"119","messageId":"120","endLine":1,"endColumn":38},{"ruleId":"117","severity":1,"message":"122","line":6,"column":16,"nodeType":"119","messageId":"120","endLine":6,"endColumn":23},{"ruleId":"117","severity":1,"message":"122","line":6,"column":16,"nodeType":"119","messageId":"120","endLine":6,"endColumn":23},{"ruleId":"117","severity":1,"message":"127","line":60,"column":9,"nodeType":"119","messageId":"120","endLine":60,"endColumn":19},{"ruleId":"117","severity":1,"message":"122","line":5,"column":16,"nodeType":"119","messageId":"120","endLine":5,"endColumn":23},{"ruleId":"117","severity":1,"message":"128","line":5,"column":10,"nodeType":"119","messageId":"120","endLine":5,"endColumn":14},{"ruleId":"117","severity":1,"message":"122","line":5,"column":16,"nodeType":"119","messageId":"120","endLine":5,"endColumn":23},{"ruleId":"117","severity":1,"message":"129","line":9,"column":10,"nodeType":"119","messageId":"120","endLine":9,"endColumn":13},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setProducts'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has a missing dependency: 'setUser'. Either include it or remove the dependency array.",["133"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'setUpdateProduct' is assigned a value but never used.","Identifier","unusedVar",["134"],"'setUser' is assigned a value but never used.","'carts' is assigned a value but never used.","'setCarts' is assigned a value but never used.",["135"],"'useEffect' is defined but never used.","'checkLogin' is assigned a value but never used.","'user' is assigned a value but never used.","'usr' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"136","fix":"137"},{"desc":"138","fix":"139"},{"desc":"138","fix":"140"},{"desc":"138","fix":"141"},"Update the dependencies array to be: [setProducts]",{"range":"142","text":"143"},"Update the dependencies array to be: [session, setUser]",{"range":"144","text":"145"},{"range":"146","text":"145"},{"range":"147","text":"145"},[1178,1180],"[setProducts]",[1273,1282],"[session, setUser]",[1725,1734],[1180,1189]]